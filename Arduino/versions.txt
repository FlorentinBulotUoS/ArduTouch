Versions:

   1.70  add TrigLFO::flags.LEGATO
         add TrigLFO::flags.PEAK
         add TrigLFO('L' 'S')
         add TrigLFO('+'/'-')
         nix TrigLFO::flags.STOPPED
         reshuffle mappings in FadeLFO::menu() TrigLFO::menu()
         EffectsLoop class absorbs EffectsMode class
         Voice no longer inherits from EffectsLoop
         add Voice::effects
         LFO::iniPos() has return type of void (was double)
         [27168 / 1414]
   1.69  audio glitches at the start of presets are mitigated
         add audio::pause() ::resume() 
         add audio::paused  ::pauseCnt ::lastR ::lastL
         [26998 / 1385]
   1.68  sequences can have an initial rest 
         in Sqnc module, add Rest and unMute records
         break StepProgrammer::push() out from StepSqnc('S')
         move mute logic from WaveOsc::generate() to Voice::generate()
         "Omission" right chnl sequenced with vibrato/tremolo settings dialed in
         [26874 / 1381]
   1.67  add FadeLFO class
         Vibrato derives from FadeLFO
         [26628 / 1379]
   1.66  add TrigLFO class
         Tremolo derives from TrigLFO
         add Control::trigger()
         add cmdTrigger symbolic constant
         add Voice( cmdTrigger )
         in LFO::menu(), 'd' now mapped to key 4 (was 2)
         Chnl('f') propagates freq
         add "Omission" preset (left channel only)
         [25922 / 1355]
   1.65  Filter.h   replaces BSFilter.h
         Filter.cpp replaces BSFilter.cpp
         add generic Filter class
         add XMFilter class 
         add Console::getByte()
         nix DuoSynth::reprompt()
         break Mode::newline_info_prompt() out from ::charEv()
         remove ModeHelp.txt from project
         [25212 / 1347]
   1.64  Control::reset() no longer virtual; calls ::charEv('!')
         all classes derived from Control handle resets via charEv('!')
         [24736 / 1309]
   1.63  LFO::dynamics() does nothing if amMute()
         add Mode::flags._RESERVE0, _RESERVE1, _RESERVE2, _RESERVE3 bits
         denote enumerated Mode::flag constants in binary 
         add Control::MUTE bit (maps to Mode::flags._RESERVE0)
         nix Control::mute 
         Control::setMute() calls ::charEv() with '.' or '<'
         add LFO('.')
         [24724 / 1323]
   1.62  LFO internals are reworked
         add LFO::iniPos()
         nix LFO::top ::bot
         add INVERT_SEMITONE
         add isDigit() macro
         [24638 / 1332]
   1.61  DuoSynth prompt changed to "main"
         DuoSynth(/) no longer toggles latching
         DuoSynth(=) does not affect latching
         nix DuoSynth(=)
         add EffectsMode(. < !)
         --- 1st version with Quick Operations Guide
         [24902 / 1368]
   1.60  add InputMode, DigitMode
         EffectsMode can select effect by number
         add EffectsMode::menu()
         add BSFilter::menu()
         BSFilter('c') calls getDigit() 
         BSFilter('s') calls getDigit()
         numbers entered at bsf> prompt no longer set shift
         Console::postKey() echoes menu char only if ECHO
         add Console::getDigit()
         Polo waveform renamed Ether
         add Synth.cpp back to project
         --- Synth.cpp has been missing from project since 1.48!
         [24880 / 1368]
   1.59  remove Menu.h Menu.cpp from project
         add Mode::flags with ECHO COLON ONESHOT MENU bits
         add Mode::menu()
         nix all Menu classes and replace with ::menu() methods
         Console::postKey() sends key thru ::menu() to charEv() if flags::MENU
         nix Mode::delimiter ::echo
         add DuoSynth menu keys = - /
         add ChnlSqnc menu keys e t
         DuoSynth::butEv() selects rght/left on either tap or press
         [24826 / 1397]
   1.58  StrMode handles key and button events
         Mode::butEv( 0.DOUBLETAP ) issues ::charEv( chrESC )
         butEvType enumerations are powers of 2
         StrMode::charEv() eats input beyond maxlen instead of popping mode
         [24660 / 1377]
   1.57  Console_.h replaces Console.h
         [24560 / 1378]
   1.56  add Menu.cpp to project
         add ActiveMenu
         add TransportMenu
         DuoMenu derives from TransportMenu
         add SqncChnlMenu
         add actMenu, csMenu 
         [26998 / 1462]
   1.55  add Bank::keyEv()
         add DuoMenu('p')
         add DuoMenu('w')
         in System.cpp, curKey is volatile and set in readKey()
         [26714 / 1426]
   1.54  add StepSqnc('|')
         add DuoSynth('[') DuoSynth(']') DuoSynth('|')
         add DuoMenu (which translates F# G G# to '|' '[' ']')
         StepSqnc::playback typed as byte
         add StepSqnc::pbOn ::pbOFF ::pbPAUSED constants
         [26644 / 1426]
   1.53  add Menu.h to project
         bugfix : no key/but events were generated while DuoSynth muted
         add Menu class
         add ControlMenu class
         DuoSynth derives from both Synth and ControlMenu
         add DuoSynth::keyEv()
         nix Synth(',') Synth('<') -- i.e. do not disable/enable audio
         add PresetBank::onChoice(), which disables/enables audio
         [26620 / 1426]
   1.52  add focus enumerated type
         Mode::onFocus( focus ) replaces ::onPush() ::onPop()
         ConKeyBrd::prompt() no longer displays octave #
         add ConKeyBrd::info()
         nix ConKeyBrd::promptyp
         add StepProgrammer::prompt()
         StepProgrammer::keyEv() echoes key to console
         StepProgrammer::keyEv() eats key event on EOS
         [26442 / 1414]
   1.51  onboard buttons generate button events
         add but.h to project
         add but struct
         add butEvType enumerated type
         add Mode::butEv()
         add Mode::onPush() ::onPop()
         Console::pushMode() ::popMode() call mode's onPush() onPop() routines
         add Console::postBut()
         add scanBut() butCount[] butPin[] tapPending[]
         scanKeys() does not scan C+ (pin 17)
         add WaveOsc::butEv()
         add DuoSynth::butEv()
         add ChnlSqnc::butEv()
         ConKeyBrd::octave becomes private
         add ConKeyBrd::getOctave() ::setOctave() ::mintOctave
         add ConKeyBrd::bumpOctave() ::butEv()
         add StepProgrammer::butEv() ::onPop()
         (*** coreLib *** copied from Core v0.11, then modified)
         [26410 / 1446]
   1.50  onboard keys generate key events 
         Console::postKey(byte, byte) replaces broadcastKey( key )
         add key::key(byte, byte)
         add ConKeyBrd::keyEv(), which echoes key to console
         add device_io(), scanKeys(), readKey(), keyPins[]
         [25558 / 1354]
   1.49  System.cpp renames Audio.cpp
         add System.h to project
         add system_setup()
         add system_loop()
         add device_io() wrapper (with logic for taking scans)
         add scanRate, bufsPerScan, scanDC
         audio_setup() renames audio::setup()
         render_audio() replaces audio::loop()
         nix .idle slot from Config record
         nix console_loop()
         nix Console::init( Mode* ) 
         [25106 / 1354]
   1.48  add StepSqnc.h StepSqnc.cpp to project 
         add Tuning.h   Tuning.cpp   to project
         add key.h                   to project
         add StepSqnc, StepProgrammer classes
         ChnlSqnc derives from both Chnl and StepSqnc
         add console::broadcastKey() 
         add key struct with ::octave() ::position() ::set()
         add Tuning class
         add EqualTemperament class
         add masterTuning
         StepSqnc::setTempo() enforces minimum tempo
         StepSqnc::info() displays '[' or ']' to inform on playing status
         StepSqnc::start() renames ::turnOn()
         StepSqnc::stop()  renames ::turnOff()
         StepSqnc::playing renames ::on
         add Chnl::name ::setName()
         nix RghtChnl, LeftChnl classes
         nix Console::onoffStr()
         [25066 / 1352]
   1.47  fix to Tremolo depth calculation
         *** coreLib.noHands *** syncs with Quadrant v0.29
   1.46  add WaveOsc.h WaveOsc.cpp BSFilter.h BSFilter.cpp to project
         remove Voice.cpp from project
         rework DuoSynth::generate()
         replace ChnlSqnc::iterate() with ::generate()
         *** coreLib.noHands *** syncs with Quadrant v0.28
         [25224 / 1369]
   1.45  StereoPhonic::generate(char *bufL, char *bufR) replaces ::iterate()
         DuoSynth::generate() loops rght/left iterate() methods
         nix Phonic::iterate()
         nix StereoPhonic::audioL/R
         add MonoPhonic::iterate() 
         add audio::enable(), audio::disable()
         Synth(.) calls audio::disable()
         Synth(<) calls audio::enable()
         canonical setup() calls audio::enable() at end of routine
         normalization of audio values occurs as PWM registers are loaded
         use audio namespace for externally referenced routines
         matrix is typed as *StereoPhonic
         add const audio::bufSz
         *** coreLib.noHands *** syncs with Neurotica v1.04
         [24592 / 1365]
   1.44  audio queue is segmented into fixed-size buffers 
         dynamic updates occur on buffer boundaries
         audio_loop() writes one buffer per call
         timer ISR always writes to PWM registers
         *** coreLib.noHands *** syncs with Neurotica v1.03
         [24508 / 1367]
   1.43  Mode::charEv() renames ::keyEvent()
         add placeholder Mode::keyEv()
         *** coreLib.noHands *** syncs with Neurotica v1.02
         [24430 / 1380]
   1.42  optimizations to BitShiftFilter
         ::val becomes automatic variable in ::iterate()
         remove all code for shift < 0 from in iterate()
         add ::mltShift ::setShift()
         add ::clipMask ::setClip()
         nix clip[]
         nix ::inpInt (not used)
         ::negative renamed ::complement
         [24396 / 1350]
   1.41  Voice::evaluate() rounds output value
         remove consort::evElapsed
         remove TIMEOUT code in DuoSynth::iterate()
         Control::amMute() is inlined
         Voice::iterate() tests for mute at start of routine (not end)
         *** coreLib.noHands *** syncs with Neurotica v1.01
         [24414 / 1370]
   1.40  add CONSOLE_OUTPUT macro
         add CONSTR() macro
         [24482 / 1372]
         [23208 / 1269] (undef CONSOLE_OUTPUT)
   1.39  rewrite toStr() using ltoa()
         rewrite Console::getDouble() using atol()
         [24482 / 1372]
   1.38  remove Voice::freqStr[] ::freqToStr()
         [26144 / 1374]
   1.37  Phonic::reset() sets mute false
         *** coreLib.noHands *** syncs with Neurotica v1.00
         [26164 / 1394]
   1.36  update copyright year in all file headers
   1.35  add Tremolo class
         add Voice::tremolo 
         Voice::vol renames ::level
         Voice::setVol() renames ::setLevel()
         Voice('V') pushes vibrato
         Voice('T') pushes tremolo
         Voice('v') sets volume
         Voice::evScalar replaced by ::instVol
         [26142 / 1394]
   1.34  add Voice::level 
         add Voice::evScalar
         add Voice::setLevel()
         add Voice('l')
         add Int type
         Voice::evaluate() reworked to use Ints
         Voice::evaluate() integrates ::evScalar
         LFO::depth ::freq range checking moved to ::setDepth()/setFreq()
         [25748 / 1304]
   1.33  add DWord type
         Voice::idx typed as DWord
         Voice::length typed as word (no longer << 16)
         in Voice::evaluate() aft/fore terminology was reversed
         in Voice::evaluate() aft/fore values typed as ints (not chars)
         [25560 / 1284]
   1.32  add LFO.h LFO.cpp to project
         Vibrato derives from LFO
         [25578 / 1288]
   1.31  Vibrato class
         add Control.h Control.cpp to project
         remove Phonic.cpp from project
         add Control class
         Phonic derives from Control
         Effect derives from Control
         Effect(+) replaces Effect(p)
         Effect(-) replaces Effect(n)
         add Voice(v)
         add Voice::vibrato
         add Console::infoDouble()
         hike dynaRate to 50hz
         [25440 / 1280]
   1.30  ConKeyBrd::keycode_ ::letter_ ::adental_ ::freq_ arrays now in progmem
         add ConKeyBrd::freq0( byte )
         ConKeyBrd::numNotes ::maxOctave typed as bytes
         [24086 / 1204]
   1.29  Bank member lists reside in program memory
         add types.h to project (defines Word struct)
         type bankmem renames member
         add Bank::base ::choice() ::dataPtr(byte)
         Bank::load() renames ::set() 
         nix Bank::members
         *** coreLib.noHands *** syncs with Neurotica v0.99
         [24032 / 1296]
   1.28  add Bank::dataPtr()
         *** coreLib.noHands *** syncs with Neurotica v0.97
         [23992 / 1328]
   1.27  add Bank::choose() ::name() ::idx ::chosen
         Bank::onChoice() replaces ::select(ith)
         member::data is typed as void*
         WaveBank derives from Bank
         remove wavmember
         *** coreLib.noHands *** syncs with Neurotica v0.95
         [23992 / 1328]
   1.26  canonical wavetable descriptors kept in PROGMEM
         remove WaveBankDialog
         WaveBank absorbs WaveBankDialog functionality
         add WaveBank::name(ith)
         WaveBank::choose() renames ::dialog()
         WaveBank::idx renames idxChosen
         remove WaveBank::chosen()
         Wavebank[arg] ::NumTabs are bytes, not words
         WaveBank::completed is reset in ::choose() not ::keyEvent()
         add wavmember struct, wavetables[] 
         Voice::setWave() takes table # as arg, not descriptor&
         [24118 / 1323]
   1.25  add Bank.h Bank.cpp to project
         Bank class replaces MacroBank
         MacroBank derives from Bank
         Bank::members no longer const
         member struct renames macro
         member::data renames ::code
         *** coreLib.noHands *** syncs with Neurotica v0.93
         [24094 / 1352]
   1.24  virtualize Synth::setup()
         *** coreLib.noHands *** syncs with Neurotica v0.78
         [24080 / 1350]
   1.23  macro renames preset struct def
         move macro struct def to Console.h
         break MacroBank out from PresetBank, move to Console module
         Console::exe() renames ::macro()
         PresetBank::macros[] renames ::presets[]
         *** coreLib.noHands *** syncs with Neurotica v0.74
   1.22  PresetBank('1..9') does not reset synth before running macro
         *** coreLib.noHands *** syncs with Neurotica v0.69
         [24062 / 1342]
   1.21  add Config::dynaRate
         dynaRate renames dynaPerSec
         dynaRate, ticksPerDyna are no longer constants
         audio_setup() absorbs setup_timer1(), setup_timer2()
         *** coreLib.noHands *** syncs with Neurotica v0.61
         [24096 / 1342]
   1.20  DuoSynth::iterate()
         [24006 / 1332]
   1.19  Phonic('.') mutes   -- was 'M'
         Phonic('<') unmutes -- was 'm'
         *** coreLib.noHands *** syncs with Neurotica v0.31
         [24004 / 1332]
   1.18  DuoSynth('/') toggles latching on/off
         add Chnl::amFreqLatching()
         [24004 / 1332]
   1.17  Chnl::info() prints space for latch icon when unlatched
         DuoSynth('u') replaces ('.')
         [23972 / 1332]
   1.16  add Phonic::info()
         *** coreLib.noHands *** syncs with Neurotica v0.30
         [23972 / 1332]
   1.15  Console::getDouble(char *) replaces Console::getDouble(char *, double*)
         coreLib.noHands syncs with Neurotica v0.23
         [23930 / 1326]
   1.14  add Phonic::setMute() ::amMute() ::mute
         add Phonic('M'/'m')
         Voice::iterate() checks amMute()
         remove Chnl::iterate()
         coreLib.noHands syncs with Neurotica v0.19
         ---- had to nix inline qualifier on Phonic::amMute() for Voice to find it WTF
         [23916 / 1330]
   1.13  add Creative Commons copyright notice to all files
         [23908 / 1327]
   1.12  nix Effect::process() - use ::iterate()
         [23908 / 1327]
   1.11  nix Control
         Effect derives from MonoPhonic
         Effect::iterate() renamed process()
         [23902 / 1329]
   1.10  voreLib modules sync with Neurotica v1.07
         add Mode.h     to project 
         add Mode.cpp   to project
         add Phonic.h   to project
         add Phonic.cpp to project
         ---- Effects are not being reset
         [24002 / 1337]
   1.09  PresetBank::presets becomes simple ptr 
         PresetBank::set(const preset *) replaces ::add(), sets ::presets ::num
         [24020 / 1343]
   1.08  audio module drives all synthesis without callbacks
         setup() passes config record to audio_setup()
         add Synth *matrix in Audio module
         Config::matrix renames ::startMode
         remove __iterate__()
         remove audio_send()
         [24022 / 1357]
   1.07  console_setup() uses configuration record passed from main module
         add Config.h to project
         remove Version.h from project
         [24056 / 1357]
   1.06  presets are located in ROM
         add Console:::romprint()
         Console::macro() reads string from ROM
         [24000 / 1343]
   1.05  add Synth.cpp to project
         'preset' replaces 'patch'
         add PresetBank class in Synth 
         nix DuoSynth::patchMode()
         add Synth::setup( preset* ) 
         add Synth::keyEvent('p')
         [23962 / 1587]
   1.04  add DuoSynth.cpp to project
         add DuoSynth.h   to project
         add console_setup() wrapper
         add console_loop()  wrapper
         audio_setup() renames audio_init()
         audio_loop()  renames audio_update()
         remove tasks()
         keybrd is allocated in ConKeyBrd.cpp
         [23838 / 1572]
   1.03  remove DuoPoly::invert ::mono ::monoChnl
         remove DupPoly('I' 'i' 'R' 'L' 's')
         [23832 / 1572]
   1.02  add dynamics control logic to __iterate__()  
         add placeholder Voice::dynamics()
         add DuoPoly::dynamics() Synth::dynamics() 
         [23988 / 1582]
   1.01  add Synth.h to project
         add abstract Synth class 
         DuoPoly derives from Synth
         DuoPoly::iterate() subsumes most of __iterate__()
         [23848 / 1576]
   1.00  base version
         [23866 / 1582]
