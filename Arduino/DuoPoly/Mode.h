/*
    Mode.h  

    Declaration of the Mode class.

    ---------------------------------------------------------------------------
 
    Copyright (C) 2016, Cornfield Electronics, Inc.
 
    This work is licensed under the Creative Commons Attribution-ShareAlike 3.0 
    Unported License.
 
    To view a copy of this license, visit
    http://creativecommons.org/licenses/by-sa/3.0/
 
    Created by Bill Alessi & Mitch Altman.
 
   ---------------------------------------------------------------------------
*/

#ifndef MODE_H_INCLUDED
#define MODE_H_INCLUDED

#include "Arduino.h"
#include "but.h"
#include "key.h"

enum focus                             // focus change (as generated by console)
{
   focusPUSH,                          // mode is being pushed on stack
   focusPOP,                           // mode is being popped from stack
   focusRESTORE                        // mode is restored after pop of child
} ;

class Mode
{
   public:

   byte     flags;                     // flag bits denote:

   enum     { ECHO      = 0b00000001,  // echo character input to console
              COLON     = 0b00000010,  // prompt delimiter is ':' (else '>')
              MENU      = 0b00000100,  // charEv(menu()) pre-empts keyEv()
              ONESHOT   = 0b00001000,  // pre-emption is for 1 event only
              _RESERVE0 = 0b00010000,  // reserved for use by derived classes
              _RESERVE1 = 0b00100000,  // reserved for use by derived classes
              _RESERVE2 = 0b01000000,  // reserved for use by derived classes
              _RESERVE3 = 0b10000000,  // reserved for use by derived classes
            };

   Mode();

   virtual void    butEv( but );       // handle a button event
   virtual void    charEv( char );     // handle a character event
   virtual void    info() {};          // display object info to console
   virtual boolean keyEv( key );       // handle a key event
   virtual char    menu( key );        // map key event to character
   virtual void    onFocus( focus ){}; // executed by console on focus change
   virtual char*   prompt();           // return prompt string for this object

   void    newline_info_prompt();      // displays new line, info, then prompt 
} ;

#endif   // ifndef MODE_H_INCLUDED
